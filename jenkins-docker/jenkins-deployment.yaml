apiVersion: apps/v1
kind: Deployment
metadata:
  name: jenkins
  labels:
    app: jenkins
spec:
  replicas: 1
  selector:
    matchLabels:
      app: jenkins
  template:
    metadata:
      labels:
        app: jenkins
    spec:
      serviceAccountName: jenkins-sa
      securityContext:
        fsGroup: 999  # ID del grupo Docker en el host
      containers:
      - name: jenkins
        image: jenkins:latest
        command:
          - java
          - "-Dorg.jenkinsci.plugins.durabletask.BourneShellScript.HEARTBEAT_CHECK_INTERVAL=86400"
          - "-jar"
          - "/usr/share/jenkins/jenkins.war"
        imagePullPolicy: IfNotPresent
        securityContext:
          runAsUser: 1000  # Usuario Jenkins
          runAsGroup: 1000  # Grupo Jenkins
          privileged: true  # Da privilegios adicionales al contenedor
        ports:
        - containerPort: 8080
        - containerPort: 50000
        env:
        - name: JAVA_OPTS
          value: "-Xms2g -Xmx4g -XX:+UnlockExperimentalVMOptions -XX:+UseCGroupMemoryLimitForHeap -Dorg.jenkinsci.plugins.durabletask.BourneShellScript.HEARTBEAT_CHECK_INTERVAL=86400"
        resources:
          requests:
            memory: "2Gi"
            cpu: "0.5"
          limits:
            memory: "4Gi"
            cpu: "2"
        volumeMounts:
        - name: jenkins-home
          mountPath: /var/jenkins_home
        - name: kubeconfig
          mountPath: /root/.kube/config
          subPath: config
        - name: docker-socket
          mountPath: /var/run/docker.sock
      volumes:
      - name: jenkins-home
        persistentVolumeClaim:
          claimName: jenkins-pvc
      - name: kubeconfig
        configMap:
          name: kubeconfig-map
      - name: docker-socket
        hostPath:
          path: /var/run/docker.sock
          type: Socket
















